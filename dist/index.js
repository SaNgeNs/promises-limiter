"use strict";Object.defineProperty(exports, "__esModule", {value: true});var i=class{#o;#e;#a=!1;#n=[];#s=[];#t=[];#i=0;#r=0;async#l(s){let t=new AbortController;this.#n.push(t);let{signal:r}=t;try{return await s(r)}catch(e){return this.#e.onError&&this.#e.onError(e),e}finally{this.#n=this.#n.filter(e=>e!==t)}}async#c(){let s=this.#o.length;if(!this.#a&&this.#r<s){let t=this.#o.slice(this.#r,this.#r+this.#e.maxConcurrent);this.#r+=this.#e.maxConcurrent,await Promise.all(t.map(async r=>{let e=await this.#l(r);e&&!(e instanceof Error)?(this.#e.onSuccess&&this.#e.onSuccess(e),this.#s.push(e)):this.#t.push(e),this.#e.onProgress&&this.#e.onProgress({completed:this.#s.length,remaining:Math.max(s-(this.#s.length+this.#t.length),0),failed:this.#t.length})})),this.#r<s&&(await new Promise(r=>{setTimeout(r,this.#i)}),this.#i=Math.min(this.#i+this.#e.progressiveDelayStep,this.#e.maxProgressiveDelay||this.#i),await this.#c())}}constructor(s,t){this.#o= exports.default =s,this.#e={maxConcurrent:10,delayBetweenBatches:0,progressiveDelayStep:0,maxProgressiveDelay:0,...t}}cancel(){this.#a=!0,this.#n.forEach(s=>s.abort())}async run(){return this.#s=[],this.#t=[],this.#i=this.#e.delayBetweenBatches,this.#r=0,await this.#c(),this.#e.onComplete&&!this.#a&&this.#e.onComplete({success:this.#s,failed:this.#t}),{success:this.#s,failed:this.#t}}},o= exports.default =i;exports.default = o;
//# sourceMappingURL=index.js.map